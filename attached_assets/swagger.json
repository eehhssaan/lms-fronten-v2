{
  "openapi": "3.0.0",
  "info": {
    "title": "Learning Management System API",
    "description": "API documentation for the Learning Management System",
    "version": "1.0.0",
    "contact": {
      "name": "LMS Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication operations"
    },
    {
      "name": "Users",
      "description": "User management operations"
    },
    {
      "name": "Courses",
      "description": "Course management operations"
    },
    {
      "name": "Content",
      "description": "Course content operations"
    },
    {
      "name": "Quizzes",
      "description": "Quiz management operations"
    },
    {
      "name": "Assignments",
      "description": "Assignment management operations"
    }
  ],
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new student account",
        "description": "Creates a new student user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "description": "Authenticate a user and return a token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "token": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/courses": {
      "get": {
        "tags": ["Courses"],
        "summary": "Get all courses",
        "description": "Retrieves all courses available",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "isActive",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by active status"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of courses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "count": {
                      "type": "integer"
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Course"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Courses"],
        "summary": "Create a new course",
        "description": "Creates a new course (admin/teacher only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Course created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Course"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - user does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UserRegistration": {
        "type": "object",
        "required": ["username", "email", "password", "firstName", "lastName"],
        "properties": {
          "username": {
            "type": "string",
            "example": "student1"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "student@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "password123"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5f8d0f55b54764421b709822"
          },
          "username": {
            "type": "string",
            "example": "student1"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "student@example.com"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "role": {
            "type": "string",
            "enum": ["student", "teacher", "admin"],
            "example": "student"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CourseInput": {
        "type": "object",
        "required": ["title", "code", "description"],
        "properties": {
          "title": {
            "type": "string",
            "example": "Introduction to Mathematics"
          },
          "code": {
            "type": "string",
            "example": "MATH101"
          },
          "description": {
            "type": "string",
            "example": "Basic concepts of mathematics"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00.000Z"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "example": "2023-12-31T00:00:00.000Z"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "maxStudents": {
            "type": "integer",
            "example": 30
          }
        }
      },
      "Course": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5f8d0f55b54764421b709823"
          },
          "title": {
            "type": "string",
            "example": "Introduction to Mathematics"
          },
          "code": {
            "type": "string",
            "example": "MATH101"
          },
          "description": {
            "type": "string",
            "example": "Basic concepts of mathematics"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "maxStudents": {
            "type": "integer",
            "example": 30
          },
          "teacher": {
            "$ref": "#/components/schemas/User"
          },
          "students": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Error message"
          }
        }
      }
    }
  }
}